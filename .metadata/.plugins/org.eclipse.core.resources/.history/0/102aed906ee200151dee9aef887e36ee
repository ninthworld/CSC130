package org.ninthworld.assignment2;

public class AVLNode {

	private int value;
	private AVLNode left, right;
	
	public AVLNode(int value){
		this.value = value;
		this.left = this.right = null;
	}
	
	public int getValue(){
		return value;
	}
	
	public void setValue(int value){
		this.value = value;
	}
	
	public AVLNode getLeft(){
		return left;
	}
	
	public void setLeft(AVLNode left){
		this.left = left;
	}
	
	public AVLNode getRight(){
		return right;
	}
	
	public void setRight(AVLNode right){
		this.right = right;
	}
	
	public boolean hasLeft(){
		return (getLeft() != null);
	}
	
	public boolean hasRight(){
		return (getRight() != null);
	}
	
	/**
	 * Inserts a value into the AVLNode
	 * @param value the int to be inserted
	 * @return true if insertion was successful, false the value already exists
	 */
	public boolean insert(int value){
		if(value == getValue()){
			return false;
		}else if(value < getValue()){
			if(hasLeft()){
				return getLeft().insert(value);
			}else{
				setLeft(new AVLNode(value));
			}
		}else if(value > getValue()){
			if(hasRight()){
				return getRight().insert(value);
			}else{
				setRight(new AVLNode(value));
			}
		}
		return true;
	}
	
	public void LRotate(){
		AVLNode a = clone();

		setValue(getRight().getValue());
		setLeft(a);
		setRight(getRight().getRight());		
	}
	
	public void RRotate(){
		AVLNode a = clone();

		setValue(getLeft().getValue());
		setRight(a);
		setLeft(getLeft().getLeft());		
	}
	
	public void DLRotate(){
		
	}
	
	public AVLNode clone(){
		AVLNode clone = new AVLNode(this.getValue());
		clone.setLeft(this.getLeft());
		clone.setRight(this.getRight());
		return clone;
	}
}
