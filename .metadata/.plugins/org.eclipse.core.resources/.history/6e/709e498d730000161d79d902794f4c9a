import java.util.Arrays;

/**
 * Created by Chris Swenson on 4/11/2016.
 */
public class Assignment3 {

	public static void main(String[] args){
		
		char[] chars = "abc".toCharArray();
		int len = 1;
		
		long start = 0, end = 0;
		for(int i=0; i<18; i++){
			start = System.currentTimeMillis();
			int wordCount = iterate(chars, len, new char[len], 0);
			end = System.currentTimeMillis();
			System.out.printf("Found %d words of length %d in %dms.\n", wordCount, len, end-start);
			len++;
		}
		System.out.println();
		
		for(int i=0; i<2; i++){
			start = System.currentTimeMillis();
			int wordCount = heap(chars, new char[len], 0, len);
			end = System.currentTimeMillis();
			System.out.printf("Found %d words of length %d in %dms.\n", wordCount, len, end-start);
			len++;
		}
	}
	
	public static int iterate(char[] chars, int len, char[] build, int pos){
		if(pos == len){
			return 1;
		}
		
		int count = 0;
		for(int i=0; i<chars.length; i++){
			build[pos] = chars[i];
			if(pos == 0 || (pos > 0 && !(i == 0 && build[pos-1] == 'c') && !(i == 2 && build[pos-1] == 'a'))){
				count += iterate(chars, len, build, pos+1);
			}
		}
		
		return count;
	}
	
	public static int heap(char[] chars, char[] build, int start, int end){
		if(end - start <= 1){
			for(int i=0; i<chars.length; i++){
				build[start] = chars[i];
				System.out.println(new String(build)));
			}
		}else{
			heap(chars, build, start, end/2);
			heap(chars, build, end/2+1, start);
		}
		
		
		return 0;
	}

}
