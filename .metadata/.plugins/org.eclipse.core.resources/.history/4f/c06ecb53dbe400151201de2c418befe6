package org.ninthworld.binarytrees;

import org.ninthworld.binarytrees.RBNode.RBColor;

public class RBTree extends BSTree {
	
	private RBNode root;
	
	public RBTree() {
		super();
		this.root = null;
	}

	public RBNode getRoot() {
		return root;
	}

	public void setRoot(RBNode root) {
		this.root = root;
	}
	
	public void insert(int value){
		RBTree.insert(value, root);
		root.setColor(RBColor.BLACK);
	}

	
	private static RBNode insert(int value, RBNode node){
		if(node == null){
			node = new RBNode(value);
		}else{
			if(value == node.getValue()){
				return node;
			}else if(value > node.getValue()){
				node.setRight( insert(value, node.getRight()) );
			}else{
				node.setLeft( insert(value, node.getLeft()) );
			}
		}
		
		if(color(node.getLeft()) == RBColor.RED){
			if(color(node.getLeft().getLeft()) == RBColor.RED){
				if(color(node.getRight()) == RBColor.BLACK){
					RBNode a = node;
					RBNode b = a.getLeft();
					RBNode br = b.getRight();
					
					b.setRight(a);
					a.setLeft(br);
					
					b.setColor(RBColor.BLACK);
					a.setColor(RBColor.RED);
					
					node = b;
				}else{
					node.getLeft().setColor(RBColor.BLACK);
					node.getRight().setColor(RBColor.BLACK);
				}
			}else if(color(node.getLeft().getRight()) == RBColor.RED){
				if(color(node.getRight()) == RBColor.BLACK){
					
				}else{
					
				}
			}			
		}else if(color(node.getRight()) == RBColor.RED){
			if(color(node.getRight().getRight()) == RBColor.RED){
				if(color(node.getLeft()) == RBColor.BLACK){
					RBNode a = node;
					RBNode b = a.getRight();
					RBNode bl = b.getLeft();
					
					b.setLeft(a);
					a.setRight(bl);
					
					b.setColor(RBColor.BLACK);
					a.setColor(RBColor.RED);
					
					node = b;
				}else{
					
				}
			}
		}
		
		return node;
	}
	
	private static RBColor color(RBNode node){
		if(node == null){
			return RBColor.BLACK;
		}else{
			return node.getColor();
		}
	}
}